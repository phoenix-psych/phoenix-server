// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Entity.Context;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240102145127_Client tests 2")]
    partial class Clienttests2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AIMSService.Entity.ARTMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Aloud_reading_accuracy")
                        .HasColumnType("int");

                    b.Property<int?>("Aloud_reading_comprehension")
                        .HasColumnType("int");

                    b.Property<int?>("Aloud_reading_rate")
                        .HasColumnType("int");

                    b.Property<int?>("Centile")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Silent_reading_comprehension")
                        .HasColumnType("int");

                    b.Property<int?>("Silent_reading_rate")
                        .HasColumnType("int");

                    b.Property<int?>("Standard_score_equivalent")
                        .HasColumnType("int");

                    b.Property<int?>("Writing_speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ARTMasters");
                });

            modelBuilder.Entity("AIMSService.Entity.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Service")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientARTDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrAcc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrAcc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrAcc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrAcc4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrCom1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrCom2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrCom3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrCom4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrComp5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrComp6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrComp7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrComp8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrErr1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrErr2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrErr3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrErr4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrSpd8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Second1")
                        .HasColumnType("int");

                    b.Property<int?>("Second2")
                        .HasColumnType("int");

                    b.Property<int?>("Second3")
                        .HasColumnType("int");

                    b.Property<int?>("Second4")
                        .HasColumnType("int");

                    b.Property<int?>("Second5")
                        .HasColumnType("int");

                    b.Property<int?>("Second6")
                        .HasColumnType("int");

                    b.Property<int?>("Second7")
                        .HasColumnType("int");

                    b.Property<int?>("Second8")
                        .HasColumnType("int");

                    b.Property<string>("SmAccuracy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmAccuracyCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmAccuracyStd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreAloud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreAloudCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreAloudStd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreSilent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreSilentCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmCompreSilentStd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedAloud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedAloudCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedAloudStd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedSilent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedSilentCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmSpeedSilentStd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmWritingSpeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmWritingSpeedCentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmWritingSpeedStd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientARTDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientCTOPPDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("APACI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APADesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APARank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("APAScore")
                        .HasColumnType("int");

                    b.Property<string>("BnPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BnRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("BnScaleScore")
                        .HasColumnType("int");

                    b.Property<string>("BwPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BwRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("BwScaleScore")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ElPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("ElScaleScore")
                        .HasColumnType("int");

                    b.Property<string>("MdPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MdRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("MdScaleScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NrPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NrRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("NrScaleScore")
                        .HasColumnType("int");

                    b.Property<string>("PACI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PADesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PARank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PAScore")
                        .HasColumnType("int");

                    b.Property<string>("PMCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PMRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PMScore")
                        .HasColumnType("int");

                    b.Property<int?>("PaSum")
                        .HasColumnType("int");

                    b.Property<string>("PlPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("PlScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("PmSum")
                        .HasColumnType("int");

                    b.Property<string>("RSNCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSNDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSNRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RSNScore")
                        .HasColumnType("int");

                    b.Property<string>("RdPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RdRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("RdScaleScore")
                        .HasColumnType("int");

                    b.Property<string>("RlPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RlRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("RlScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("RsnSum")
                        .HasColumnType("int");

                    b.Property<int?>("apaSum")
                        .HasColumnType("int");

                    b.Property<string>("selected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("snPercentageRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("snRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("snScaleScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientCTOPPDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientGOARTDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BnRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("BwRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("CI")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("MdRawScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NrRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("PlRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("RdRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("RlRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("SnRawScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientGOARTDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientTOMALDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("avmCmi")
                        .HasColumnType("int");

                    b.Property<int?>("avmFri")
                        .HasColumnType("int");

                    b.Property<int?>("avmNmi")
                        .HasColumnType("int");

                    b.Property<int?>("avmNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("avmNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("avmNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("dbAci")
                        .HasColumnType("int");

                    b.Property<int?>("dbVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("dbVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("dbVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("dfAci")
                        .HasColumnType("int");

                    b.Property<int?>("dfSri")
                        .HasColumnType("int");

                    b.Property<int?>("fmCmi")
                        .HasColumnType("int");

                    b.Property<int?>("fmFri")
                        .HasColumnType("int");

                    b.Property<int?>("fmNmi")
                        .HasColumnType("int");

                    b.Property<int?>("fmNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("fmNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("fmNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("indAci")
                        .HasColumnType("int");

                    b.Property<int?>("indAri")
                        .HasColumnType("int");

                    b.Property<int?>("indCmi")
                        .HasColumnType("int");

                    b.Property<int?>("indFri")
                        .HasColumnType("int");

                    b.Property<int?>("indNmi")
                        .HasColumnType("int");

                    b.Property<int?>("indSri")
                        .HasColumnType("int");

                    b.Property<int?>("indVdri")
                        .HasColumnType("int");

                    b.Property<int?>("indVmi")
                        .HasColumnType("int");

                    b.Property<int?>("indli")
                        .HasColumnType("int");

                    b.Property<int?>("lbAci")
                        .HasColumnType("int");

                    b.Property<int?>("lbVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("lbVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("lbVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("lfAci")
                        .HasColumnType("int");

                    b.Property<int?>("lfSri")
                        .HasColumnType("int");

                    b.Property<int?>("lfVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("lfVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("lfVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("mflCmi")
                        .HasColumnType("int");

                    b.Property<int?>("mflFri")
                        .HasColumnType("int");

                    b.Property<int?>("mflNmi")
                        .HasColumnType("int");

                    b.Property<int?>("mflNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("mflNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("mflNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("mfsAri")
                        .HasColumnType("int");

                    b.Property<int?>("mfsCmi")
                        .HasColumnType("int");

                    b.Property<int?>("mfsVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("mfsVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("mfsVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("mfsVmi")
                        .HasColumnType("int");

                    b.Property<int?>("mfsdVdri")
                        .HasColumnType("int");

                    b.Property<int?>("mfsdVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("mfsdVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("mfsdVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("miAci")
                        .HasColumnType("int");

                    b.Property<int?>("miSri")
                        .HasColumnType("int");

                    b.Property<int?>("mlNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("mlNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("mlNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("ofVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("ofVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("ofVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("orCmi")
                        .HasColumnType("int");

                    b.Property<int?>("orLi")
                        .HasColumnType("int");

                    b.Property<int?>("orVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("orVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("orVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("orVmi")
                        .HasColumnType("int");

                    b.Property<string>("perAci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perAri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perCmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perFri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perNmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perSri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perVdri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perVmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("perli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("prAri")
                        .HasColumnType("int");

                    b.Property<int?>("prCmi")
                        .HasColumnType("int");

                    b.Property<int?>("prLi")
                        .HasColumnType("int");

                    b.Property<int?>("prVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("prVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("prVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("prVmi")
                        .HasColumnType("int");

                    b.Property<string>("selected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("smAci")
                        .HasColumnType("int");

                    b.Property<int?>("smAri")
                        .HasColumnType("int");

                    b.Property<int?>("smCmi")
                        .HasColumnType("int");

                    b.Property<int?>("smFri")
                        .HasColumnType("int");

                    b.Property<int?>("smNmi")
                        .HasColumnType("int");

                    b.Property<int?>("smSri")
                        .HasColumnType("int");

                    b.Property<int?>("smVdri")
                        .HasColumnType("int");

                    b.Property<int?>("smVmi")
                        .HasColumnType("int");

                    b.Property<int?>("smli")
                        .HasColumnType("int");

                    b.Property<int?>("vsmCmi")
                        .HasColumnType("int");

                    b.Property<int?>("vsmNmi")
                        .HasColumnType("int");

                    b.Property<int?>("vsmNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("vsmNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("vsmNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("vsmSri")
                        .HasColumnType("int");

                    b.Property<int?>("vsrLi")
                        .HasColumnType("int");

                    b.Property<int?>("vsrNonVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("vsrNonVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("vsrNonVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("wsrCmi")
                        .HasColumnType("int");

                    b.Property<int?>("wsrLi")
                        .HasColumnType("int");

                    b.Property<int?>("wsrVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("wsrVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("wsrVerbalScaleScore")
                        .HasColumnType("int");

                    b.Property<int?>("wsrVmi")
                        .HasColumnType("int");

                    b.Property<int?>("wsrdVdri")
                        .HasColumnType("int");

                    b.Property<int?>("wsrdVerbalPercentageRank")
                        .HasColumnType("int");

                    b.Property<int?>("wsrdVerbalRawScore")
                        .HasColumnType("int");

                    b.Property<int?>("wsrdVerbalScaleScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientTOMALDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientTOWREDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("descriptiveTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeAgeEqui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeGradeEqui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeScale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pdeSum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("selected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweAgeEqui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweGradeEqui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweRank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sweScale")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientTOWREDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientWRATDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("mcCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mcGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mcPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mcRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("mcStandardScore")
                        .HasColumnType("int");

                    b.Property<string>("rcCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rcGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rcPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rcRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rcStandardScore")
                        .HasColumnType("int");

                    b.Property<string>("scCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("scStandardScore")
                        .HasColumnType("int");

                    b.Property<string>("selected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("spRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("spStandardScore")
                        .HasColumnType("int");

                    b.Property<string>("wrCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wrGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wrPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wrRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("wrStandardScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientWRATDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.ClientWRITDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("dSum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diPercentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diStandardScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iqCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iqIQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iqPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iqSumScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maPercentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maStandardScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("selected")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaPercentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaStandardScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaSum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vbCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vbIQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vbPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vbSumScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vcPercentile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vcRawScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vcStandardScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("viCI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("viIQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("viPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("viSumScore")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientWRITDetails");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormAAccuracy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_from")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("month_from")
                        .HasColumnType("int");

                    b.Property<int?>("month_to")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.Property<int?>("year_from")
                        .HasColumnType("int");

                    b.Property<int?>("year_to")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormAAccuracys");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormAAgeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_TO")
                        .HasColumnType("int");

                    b.Property<decimal?>("Age_equiv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Fluency_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Rate_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormAAgeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormAComprehension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("Age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("Age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("Age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_from")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PercentileRank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormAComprehensions");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormAFluency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Fluency_from")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("ile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormAFluencys");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormAGradeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Fluency_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_TO")
                        .HasColumnType("int");

                    b.Property<decimal?>("Grade_equiv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Rate_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormAGradeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormARate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate_from")
                        .HasColumnType("int");

                    b.Property<int?>("Rate_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("percentile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormARates");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBAccuracy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_from")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("percentile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBAccuracys");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBAgeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_TO")
                        .HasColumnType("int");

                    b.Property<string>("Age_equiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Fluency_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Rate_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBAgeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBComprehension", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Comprehension_from")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("percentile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBComprehensions");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBFluency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fluency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Fluency_from")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_to")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("ile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBFluencys");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBGradeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Accuracy_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Accuracy_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Comprehension_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Fluency_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Fluency_TO")
                        .HasColumnType("int");

                    b.Property<decimal?>("Grade_Equiv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rate_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Rate_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBGradeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartFormBRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("age_month_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_month_to")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_from")
                        .HasColumnType("int");

                    b.Property<int?>("age_year_to")
                        .HasColumnType("int");

                    b.Property<int?>("percentile_Rank")
                        .HasColumnType("int");

                    b.Property<int?>("rate_from")
                        .HasColumnType("int");

                    b.Property<int?>("rate_to")
                        .HasColumnType("int");

                    b.Property<int?>("scaled_score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartFormBRates");
                });

            modelBuilder.Entity("AIMSService.Entity.GoartRank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Oral_Reading_Index")
                        .HasColumnType("int");

                    b.Property<int?>("Percentile_rank")
                        .HasColumnType("int");

                    b.Property<int?>("Sum_of_scaled_scores_Fluency_Comprehension")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoartRanks");
                });

            modelBuilder.Entity("AIMSService.Entity.TowreAgeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age_equivalent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Phonemic_Decoding_Efficiency_raw_score_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Phonemic_Decoding_Efficiency_raw_score_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Sight_Word_Efficiency_raw_score_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Sight_Word_Efficiency_raw_score_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowreAgeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.TowreGradeEqui", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Grade_equivalent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Phonemic_Decoding_Efficiency_raw_score_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Phonemic_Decoding_Efficiency_raw_score_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Sight_Word_Efficiency_raw_score_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Sight_Word_Efficiency_raw_score_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowreGradeEquis");
                });

            modelBuilder.Entity("AIMSService.Entity.TowrePde", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Raw_score")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowrePdes");
                });

            modelBuilder.Entity("AIMSService.Entity.TowreRank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Percentile_rank_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Percentile_rank_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowreRanks");
                });

            modelBuilder.Entity("AIMSService.Entity.TowreSwe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Raw_score")
                        .HasColumnType("int");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowreSwes");
                });

            modelBuilder.Entity("AIMSService.Entity.TowreWR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Sum_of_SWE_PDE_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Sum_of_SWE_PDE_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TowreWRs");
                });

            modelBuilder.Entity("AIMSService.Entity.WRAT_Blue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Math_Computation_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Math_Computation_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reading_Composite_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Reading_Composite_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_ComprehensionTO")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("SpellingTO")
                        .HasColumnType("int");

                    b.Property<int?>("Spelling_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Standard_score")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading_TO")
                        .HasColumnType("int");

                    b.Property<int?>("month_from")
                        .HasColumnType("int");

                    b.Property<int?>("month_to")
                        .HasColumnType("int");

                    b.Property<int?>("year_from")
                        .HasColumnType("int");

                    b.Property<int?>("year_to")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRAT_Blues");
                });

            modelBuilder.Entity("AIMSService.Entity.WRAT_CI_Blue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("CI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Math_Computation")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reading_Composite")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_Comprehension")
                        .HasColumnType("int");

                    b.Property<int?>("Spelling")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRAT_CI_Blues");
                });

            modelBuilder.Entity("AIMSService.Entity.WRAT_CI_Green", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("CI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Math_Computation")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reading_Composite")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_Comprehension")
                        .HasColumnType("int");

                    b.Property<int?>("Spelling")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRAT_CI_Greens");
                });

            modelBuilder.Entity("AIMSService.Entity.WRAT_Green", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Math_Computation_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Math_Computation_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reading_Composite_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Reading_Composite_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_Comprehension_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Sentence_Comprehension_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Spelling_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Spelling_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Standard_score")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("Word_Reading_TO")
                        .HasColumnType("int");

                    b.Property<int?>("month_from")
                        .HasColumnType("int");

                    b.Property<int?>("month_to")
                        .HasColumnType("int");

                    b.Property<int?>("year_from")
                        .HasColumnType("int");

                    b.Property<int?>("year_to")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRAT_Greens");
                });

            modelBuilder.Entity("Web.Entity.Answers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IndividualId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("Web.Entity.AssessorAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<Guid>("QustionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AssessorAnswers");
                });

            modelBuilder.Entity("Web.Entity.AssessorBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IndividualId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Slot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssessorBookings");
                });

            modelBuilder.Entity("Web.Entity.AssessorPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssessorPayments");
                });

            modelBuilder.Entity("Web.Entity.AssessorProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pronoun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AssessorProfiles");
                });

            modelBuilder.Entity("Web.Entity.AssessorSlot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Availability")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SlotId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AssessorSlots");
                });

            modelBuilder.Entity("Web.Entity.Billing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("IndividualContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IndividualId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("UniversityContribution")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("Web.Entity.CTOPPCompositeMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompositeScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PercentileRank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SumOf2")
                        .HasColumnType("int");

                    b.Property<int?>("SumOf3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CTOPPCompositeMasters");
                });

            modelBuilder.Entity("Web.Entity.CTOPPDescriptiveTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompositeScoreFrom")
                        .HasColumnType("int");

                    b.Property<int?>("CompositeScoreTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptiveTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ScaledScoreFrom")
                        .HasColumnType("int");

                    b.Property<int?>("ScaledScoreTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CTOPPDescriptiveTerms");
                });

            modelBuilder.Entity("Web.Entity.CTOPPMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int?>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<int?>("BlendingNonwordsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("BlendingNonwordsTo")
                        .HasColumnType("int");

                    b.Property<int?>("BlendingWordsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("BlendingWordsTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ElisionFrom")
                        .HasColumnType("int");

                    b.Property<int?>("ElisionTo")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryForDigitsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("MemoryForDigitsTo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NonwordRepetitionFrom")
                        .HasColumnType("int");

                    b.Property<int?>("NonwordRepetitionTo")
                        .HasColumnType("int");

                    b.Property<int?>("PercentageRankFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PercentageRankTo")
                        .HasColumnType("int");

                    b.Property<int?>("PhonemeIsolationFrom")
                        .HasColumnType("int");

                    b.Property<int?>("PhonemeIsolationTo")
                        .HasColumnType("int");

                    b.Property<int?>("RapidColorNamingFrom")
                        .HasColumnType("int");

                    b.Property<int?>("RapidColorNamingTo")
                        .HasColumnType("int");

                    b.Property<int?>("RapidDigitNamingFrom")
                        .HasColumnType("int");

                    b.Property<int?>("RapidDigitNamingTo")
                        .HasColumnType("int");

                    b.Property<int?>("RapidLetterNamingFrom")
                        .HasColumnType("int");

                    b.Property<int?>("RapidLetterNamingTo")
                        .HasColumnType("int");

                    b.Property<int?>("RapidObjectNamingFrom")
                        .HasColumnType("int");

                    b.Property<int?>("RapidObjectNamingTo")
                        .HasColumnType("int");

                    b.Property<int?>("ScaledScore")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentingNonwordsFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentingNonwordsTo")
                        .HasColumnType("int");

                    b.Property<int?>("SoundMatchingFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SoundMatchingTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CTOPPMasters");
                });

            modelBuilder.Entity("Web.Entity.Questions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Group")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option6")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option7")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Web.Entity.Slot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("MaxHour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MaxMinute")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MinHour")
                        .HasColumnType("tinyint");

                    b.Property<byte>("MinMinute")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("Web.Entity.TOMALIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ACI")
                        .HasColumnType("int");

                    b.Property<int?>("ACI_TO")
                        .HasColumnType("int");

                    b.Property<int?>("ARI")
                        .HasColumnType("int");

                    b.Property<int?>("ARI_TO")
                        .HasColumnType("int");

                    b.Property<int?>("CMI")
                        .HasColumnType("int");

                    b.Property<int?>("CMI_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FRI")
                        .HasColumnType("int");

                    b.Property<int?>("FRI_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Ind")
                        .HasColumnType("int");

                    b.Property<int?>("LI")
                        .HasColumnType("int");

                    b.Property<int?>("LI_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NMI")
                        .HasColumnType("int");

                    b.Property<int?>("NMI_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Percentile")
                        .HasColumnType("int");

                    b.Property<int?>("Percentile_TO")
                        .HasColumnType("int");

                    b.Property<int?>("SRI")
                        .HasColumnType("int");

                    b.Property<int?>("SRI_TO")
                        .HasColumnType("int");

                    b.Property<int?>("VDRI")
                        .HasColumnType("int");

                    b.Property<int?>("VDRI_1")
                        .HasColumnType("int");

                    b.Property<string>("VMI")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TOMALIndexs");
                });

            modelBuilder.Entity("Web.Entity.TOMALMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AVM_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("AVM_TO")
                        .HasColumnType("int");

                    b.Property<int>("AgeFromMonth")
                        .HasColumnType("int");

                    b.Property<int>("AgeFromYear")
                        .HasColumnType("int");

                    b.Property<int>("AgeToMonth")
                        .HasColumnType("int");

                    b.Property<int>("AgeToYear")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DB_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("DB_TO")
                        .HasColumnType("int");

                    b.Property<int?>("DF_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("DF_TO")
                        .HasColumnType("int");

                    b.Property<int?>("FM_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("FM_TO")
                        .HasColumnType("int");

                    b.Property<int?>("LB_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("LB_TO")
                        .HasColumnType("int");

                    b.Property<int?>("LF_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("LF_TO")
                        .HasColumnType("int");

                    b.Property<int?>("MFLTO")
                        .HasColumnType("int");

                    b.Property<int?>("MFL_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("MFSD_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("MFSD_TO")
                        .HasColumnType("int");

                    b.Property<int?>("MFS_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("MFS_TO")
                        .HasColumnType("int");

                    b.Property<int?>("MI_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("MI_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OR_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("OR_TO")
                        .HasColumnType("int");

                    b.Property<int?>("PR_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("PR_TO")
                        .HasColumnType("int");

                    b.Property<int?>("Scaled_Score")
                        .HasColumnType("int");

                    b.Property<int?>("VSM_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("VSM_TO")
                        .HasColumnType("int");

                    b.Property<int?>("VSR_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("VSR_TO")
                        .HasColumnType("int");

                    b.Property<int?>("WSRD")
                        .HasColumnType("int");

                    b.Property<int?>("WSR_FROM")
                        .HasColumnType("int");

                    b.Property<int?>("WSR_TO")
                        .HasColumnType("int");

                    b.Property<int?>("ile_Rank")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TOMALMasters");
                });

            modelBuilder.Entity("Web.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("UserType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Web.Entity.WRITGeneral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CONFIDENCE_INETRVAL_90_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INETRVAL_90_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INETRVAL_95_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INETRVAL_95_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("IQ_SCORES_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IQ_SCORE_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PERCENTILES_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PERCENTILES_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SUM_OF_ALL_SUBTEST_STD_SCORE_FROM")
                        .HasColumnType("int");

                    b.Property<int>("SUM_OF_ALL_SUBTEST_STD_SCORE_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRITGenerals");
                });

            modelBuilder.Entity("Web.Entity.WRITSubtest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AGE_MONTH_FROM")
                        .HasColumnType("int");

                    b.Property<int>("AGE_MONTH_TO")
                        .HasColumnType("int");

                    b.Property<int>("AGE_YEAR_FROM")
                        .HasColumnType("int");

                    b.Property<int>("AGE_YEAR_TO")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Diamonds_Standard_scores")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Matrices_Standard_Scores")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Raw_Scores")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Verbal_Analogies_Std_Scores")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Vocabulary_Standard_Scores")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("WRITSubtests");
                });

            modelBuilder.Entity("Web.Entity.WRITVerbal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CONFIDENCE_90_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_90_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("INTERVALS_95_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("INTERVALS_95_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IQ_SCORES_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IQ_SCORES_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PERCENTILES_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PERCENTILES_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SUM_OF_VERBAL_STD_SCORES_FROM")
                        .HasColumnType("int");

                    b.Property<int>("SUM_OF_VERBAL_STD_SCORES_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRITVerbals");
                });

            modelBuilder.Entity("Web.Entity.WRITVisual", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CONFIDENCE_INTERVALS90_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INTERVALS90_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INTERVAL_95_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CONFIDENCE_INTERVAL_95_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("IQ_SCORES_FREOM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IQ_SCORES_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PERCENTILES_FROM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PERCENTILES_TO")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SUM_OF_VISUAL_STD_SCORES_FROM")
                        .HasColumnType("int");

                    b.Property<int>("SUM_OF_VISUAL_STD_SCORES_TO")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WRITVisuals");
                });

            modelBuilder.Entity("Web.Entity.Answers", b =>
                {
                    b.HasOne("Web.Entity.Questions", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web.Entity.AssessorProfile", b =>
                {
                    b.HasOne("Web.Entity.User", "User")
                        .WithOne("AssessorProfile")
                        .HasForeignKey("Web.Entity.AssessorProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web.Entity.Questions", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Web.Entity.User", b =>
                {
                    b.Navigation("AssessorProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
